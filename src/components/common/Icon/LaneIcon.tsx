import { useCallback } from "react";

// type
import type { LaneIconShape } from "@src/types";

type Props = {
  shape: LaneIconShape;
  className: string;
};

const LaneIcon = ({ shape, className }: Props) => {
  const getIcon = useCallback(() => {
    switch (shape) {
      case "Top":
        return (
          <>
            <path
              opacity="0.3"
              fillRule="evenodd"
              clipRule="evenodd"
              d="M7.41251 14.8732H14.8732V7.41251L18 4.28571V18H4.28571L7.41251 14.8732Z"
              fill="#2D2B2E"
            />
            <path
              d="M2 2H16.8571L13.5942 5.26294H5.26294V13.5942L2 16.8571V2Z"
              fill="#2D2B2E"
            />
            <rect
              opacity="0.3"
              x="7.71429"
              y="7.71429"
              width="4.57143"
              height="4.57143"
              fill="#2D2B2E"
            />
          </>
        );
      case "Jug":
        return (
          <>
            <path
              d="M9.19112 7.88095C8.86756 6.58571 5.82076 2.75397 4.33781 1C5.95557 3.26667 6.89928 8.69048 7.16891 11.119C6.5218 9.5 2.85485 6.93651 1.10227 5.85714L1.50671 6.2619C2.15382 6.90952 3.12448 8.15079 3.52892 8.69048L4.33781 13.1429L9.59556 18C9.73037 17.4603 10 16.0571 10 14.7619C10 13.1429 9.59556 9.5 9.19112 7.88095Z"
              fill="#2D2B2E"
            />
            <path
              opacity="0.3"
              d="M10.0741 7.70893C10.4267 6.44607 13.7468 2.71012 15.3628 1C13.5999 3.21 12.5715 8.49821 12.2777 10.8661C12.9829 9.2875 16.9788 6.7881 18.8886 5.73571L18.4478 6.13036C17.7427 6.76179 16.6849 7.97202 16.2442 8.49821L15.3628 12.8393L12.2777 14.8125C12.1308 14.2863 12.2777 12.05 11.837 10.8661C11.2795 9.36851 9.63336 9.2875 10.0741 7.70893Z"
              fill="#2D2B2E"
            />
          </>
        );
      case "Mid":
        return (
          <>
            <path
              opacity="0.3"
              fillRule="evenodd"
              clipRule="evenodd"
              d="M13.9141 2H2V13.9141L5.2 10.7141V5.2H10.7141L13.9141 2ZM6.08636 18H18V6.08636L14.8 9.28636V14.8H9.28636L6.08636 18Z"
              fill="#2D2B2E"
            />
            <path
              d="M2 15.7143L15.7143 2H18V4.28571L4.28571 18H2V15.7143Z"
              fill="#2D2B2E"
            />
          </>
        );
      case "Adc":
        return (
          <>
            <path
              opacity="0.3"
              fillRule="evenodd"
              clipRule="evenodd"
              d="M12.5875 5.12681H5.12681V12.5875L2.00001 15.7143V2.00001H15.7143L12.5875 5.12681Z"
              fill="#2D2B2E"
            />
            <path
              d="M18 18H3.14286L6.4058 14.7371H14.7371V6.4058L18 3.14286V18Z"
              fill="#2D2B2E"
            />
            <rect
              opacity="0.3"
              x="12.2857"
              y="12.2857"
              width="4.57143"
              height="4.57143"
              transform="rotate(-180 12.2857 12.2857)"
              fill="#2D2B2E"
            />
          </>
        );
      case "Sup":
        return (
          <>
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M7.42489 8.0885C3.88444 6.27611 3.18967 3.27434 3.28485 2C2.25698 3.35929 2 5.39823 2 6.24779H3.85588L2.14276 6.95575L2.85656 8.37168H4.8552L3.4276 9.07965L4.1414 9.9292C4.47451 9.78761 5.28348 9.56106 5.85452 9.78761C6.42556 10.0142 6.85384 10.7316 6.9966 11.0619C6.05846 11.2035 5.89341 11.9242 5.99728 12.3363C6.14004 12.9027 6.71108 13.3274 7.42489 13.0995C8.10024 12.8838 8.18627 12.3259 8.13868 12.0531L7.42489 8.0885ZM12.5751 8.0885C16.1156 6.27611 16.8103 3.27434 16.7152 2C17.743 3.35929 18 5.39823 18 6.24779H16.1441L17.8572 6.95575L17.1434 8.37168H15.1448L16.5724 9.07965L15.8586 9.9292C15.5255 9.78761 14.7165 9.56106 14.1455 9.78761C13.5744 10.0142 13.1462 10.7316 13.0034 11.0619C13.9415 11.2035 14.1066 11.9242 14.0027 12.3363C13.86 12.9027 13.2889 13.3274 12.5751 13.0995C11.8998 12.8838 11.8137 12.3259 11.8613 12.0531L12.5751 8.0885ZM7.85313 5.53982L8.99521 2.99115H10.9938L12.1359 5.53982L10.4228 9.50442V14.0354L11.2794 16.5841L10.4228 18H9.56625L8.70969 16.5841L9.56625 14.0354V9.50442L7.85313 5.53982ZM10.4228 4.12389H9.56623L8.99519 5.25663L9.99451 7.80531L10.9938 5.25663L10.4228 4.12389Z"
              fill="#2D2B2E"
            />
          </>
        );

      default:
        return <span>존재하지 않는 아이콘입니다.</span>;
    }
  }, [shape]);

  return (
    <svg
      viewBox="0 0 20 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
    >
      {getIcon()}
    </svg>
  );
};

export default LaneIcon;
